#include "geometryengine.h"

#include <QOpenGLShaderProgram>

#include <algorithm>
#include <array>
#include <cmath>

namespace {
//------------------------------------------------------------------------------------
class Rainbow {
  static constexpr double PI = 3.141592653589793238463;

public:
  static constexpr std::tuple<float, float, float> getColor(double s) noexcept {
    assert(0.0 <= s && s <= 1.0);
    return std::make_tuple(R(s), G(s), B(s));
  }

private:
  static constexpr float R(double s) noexcept {
    double r = 1.0;
    const double r0 = 0.1, c0 = 0.4, c1 = 0.6, c2 = 0.8;
    if (0 <= s && s < c0) {
      const double ds = (c0 - s) / c0;
      r = r0 * (1.0 - ds * ds * ds);
    } else if (c0 <= s && s <= c1) {
      r = r0;
    } else if (c1 < s && s < c2) {
      r = (1.0 + r0) / 2.0 + sin(PI * (s - (c2 + c1) / 2.0) / (c2 - c1)) * (1.0 - r0) / 2.0;
    }
    assert(0.0 <= r && r <= 1.0);
    return static_cast<float>(r);
  }

  static constexpr float G(double s) noexcept {
    double g = 1.0;
    const double c = 0.45;
    const double a = 1.0 / (c * c * c * c);;
    if (0 <= s && s < c) {
      const double ds = s - c;
      g = 1.0 - a * ds * ds * ds * ds;
    } else if (1.0 - c < s && s <= 1.0) {
      const double ds = s - (1.0 - c);
      g = 1.0 - a * ds * ds * ds * ds;
    }
    assert(0.0 <= g && g <= 1.0);
    return static_cast<float>(g);
  }

  static constexpr float B(double s) noexcept {
    double b = 0.0;
    const double c0 = 0.4, c1 = 0.7;
    if (0 <= s && s <= c0) {
      b = 1.0;
    } else if (c0 < s && s < c1) {
      b = (1.0 - sin(PI * (s - (c1 + c0) / 2.0) / (c1 - c0))) / 2.0;
    }
    assert(0.0 <= b && b <= 1.0);
    return static_cast<float>(b);
  }
};
//------------------------------------------------------------------------------------
} // anonymous namespace

GeometryEngine::GeometryEngine()
  : m_indexBuf(QOpenGLBuffer::IndexBuffer) 
{
  initializeOpenGLFunctions();

  m_arrayBuf.create();
  m_indexBuf.create();

  initModelGeometry();
}

GeometryEngine::~GeometryEngine() {
  m_arrayBuf.destroy();
  m_indexBuf.destroy();
}

void GeometryEngine::initModelGeometry() {
  const double minS = 0.0, maxS = 4.0;
  // each element's 16 lines contain: x, y, stress
  const std::array<std::array<double, 48>, 60> element{ {
    // Element 0
    {
    0.5, 0.0, 4.37169,
    0.508020, 0.0, 4.17971,
    0.516040, 0.0, 4.00216,
    0.524060, 0.0, 3.83836,
    0.499898, 0.0100846, 4.36675,
    0.507855, 0.0101901, 4.17671,
    0.515813, 0.0102956, 4.00069,
    0.52377, 0.0104012, 3.83816,
    0.499593, 0.0201650, 4.3498,
    0.507555, 0.0203775, 4.16181,
    0.515517, 0.0205899, 3.98742,
    0.523479, 0.0208024, 3.82616,
    0.499085, 0.0302372, 4.3217,
    0.507120, 0.0305594, 4.1349,
    0.515154, 0.0308815, 3.96203,
    0.523189, 0.0312036, 3.80247
    },
    // Element 1
    {
    0.524060, 0.0, 3.83836,
    0.536090, 0.0, 3.61671,
    0.54812, 0.0, 3.4182,
    0.560150, 0.0, 3.24071,
    0.52377, 0.0104012, 3.83816,
    0.535807, 0.0105623, 3.61659,
    0.547845, 0.0107233, 3.41792,
    0.559882, 0.0108844, 3.24066,
    0.523479, 0.0208024, 3.82616,
    0.535524, 0.0211245, 3.60628,
    0.547569, 0.0214466, 3.40919,
    0.559614, 0.0217687, 3.23339,
    0.523189, 0.0312036, 3.80247,
    0.535241, 0.0316868, 3.58616,
    0.547293, 0.0321699, 3.39223,
    0.559345, 0.0326531, 3.21855
    },
    // Element 2
    {
    0.560150, 0.0, 3.24071,
    0.578195, 0.0, 3.00851,
    0.596241, 0.0, 2.80737,
    0.614286, 0.0, 2.63387,
    0.559882, 0.0108844, 3.24066,
    0.577938, 0.0111259, 3.00883,
    0.595994, 0.0113675, 2.80747,
    0.614050, 0.0116091, 2.63392,
    0.559614, 0.0217687, 3.23339,
    0.577681, 0.0222519, 3.00292,
    0.595748, 0.0227351, 2.80283,
    0.613815, 0.0232182, 2.63043,
    0.559345, 0.0326531, 3.21855,
    0.577423, 0.0333778, 2.99098,
    0.595502, 0.0341026, 2.79369,
    0.61358, 0.0348274, 2.62319
    },
    // Element 3
    {
    0.614286, 0.0, 2.63387,
    0.641353, 0.0, 2.41406,
    0.668421, 0.0, 2.22777,
    0.695489, 0.0, 2.07037,
    0.614050, 0.0116091, 2.63392,
    0.641135, 0.0119715, 2.41445,
    0.668219, 0.0123339, 2.22813,
    0.695303, 0.0126963, 2.07067,
    0.613815, 0.0232182, 2.63043,
    0.640916, 0.023943, 2.41199,
    0.668016, 0.0246677, 2.2266,
    0.695117, 0.0253925, 2.06997,
    0.61358, 0.0348274, 2.62319,
    0.640697, 0.0359145, 2.40675,
    0.667814, 0.0370016, 2.2231,
    0.694931, 0.0380888, 2.06762
    },
    // Element 4
    {
    0.695489, 0.0, 2.07037,
    0.736090, 0.0, 1.87070,
    0.776692, 0.0, 1.69371,
    0.817293, 0.0, 1.53076,
    0.695303, 0.0126963, 2.07067,
    0.735929, 0.0132398, 1.8712,
    0.776555, 0.0137834, 1.69428,
    0.817182, 0.014327, 1.53124,
    0.695117, 0.0253925, 2.06997,
    0.735768, 0.0264796, 1.87102,
    0.776419, 0.0275668, 1.69454,
    0.817070, 0.0286539, 1.53188,
    0.694931, 0.0380888, 2.06762,
    0.735607, 0.0397195, 1.87034,
    0.776283, 0.0413502, 1.6954,
    0.816959, 0.0429809, 1.5345
    },
    // Element 5
    {
    0.817293, 0.0, 1.53076,
    0.878195, 0.0, 1.29777,
    0.939098, 0.0, 1.0222,
    1.0, 0.0, 0.698075,
    0.817182, 0.014327, 1.53124,
    0.878121, 0.0151423, 1.29888,
    0.939061, 0.0159576, 1.02378,
    1.0, 0.016773, 0.699862,
    0.817070, 0.0286539, 1.53188,
    0.878047, 0.0302846, 1.30134,
    0.939023, 0.0319153, 1.02777,
    1.0, 0.033546, 0.705124,
    0.816959, 0.0429809, 1.5345,
    0.877973, 0.0454269, 1.30341,
    0.938986, 0.0478729, 1.03303,
    1.0, 0.0503190, 0.71771
    },
    // Element 6
    {
    0.499085, 0.0302372, 4.3217,
    0.507120, 0.0305594, 4.1349,
    0.515154, 0.0308815, 3.96203,
    0.523189, 0.0312036, 3.80247,
    0.498207, 0.0423073, 4.27499,
    0.506163, 0.0428147, 4.09453,
    0.514119, 0.043322, 3.92719,
    0.522076, 0.0438293, 3.77248,
    0.497037, 0.0543526, 4.21145,
    0.505012, 0.0550534, 4.03816,
    0.512987, 0.0557542, 3.87646,
    0.520962, 0.056455, 3.72593,
    0.495576, 0.0663661, 4.13453,
    0.503667, 0.067271, 3.96545,
    0.511758, 0.0681758, 3.80868,
    0.519849, 0.0690807, 3.66372
    },
    // Element 7
    {
    0.523189, 0.0312036, 3.80247,
    0.535241, 0.0316868, 3.58616,
    0.547293, 0.0321699, 3.39223,
    0.559345, 0.0326531, 3.21855,
    0.522076, 0.0438293, 3.77248,
    0.534156, 0.0446038, 3.56044,
    0.546236, 0.0453784, 3.36977,
    0.558316, 0.0461529, 3.19918,
    0.520962, 0.056455, 3.72593,
    0.533071, 0.0575209, 3.52007,
    0.545179, 0.0585868, 3.33506,
    0.557287, 0.0596527, 3.16966,
    0.519849, 0.0690807, 3.66372,
    0.531986, 0.0704380, 3.46639,
    0.544122, 0.0717953, 3.28888,
    0.556259, 0.0731525, 3.12918
    },
    // Element 8
    {
    0.559345, 0.0326531, 3.21855,
    0.577423, 0.0333778, 2.99098,
    0.595502, 0.0341026, 2.79369,
    0.61358, 0.0348274, 2.62319,
    0.558316, 0.0461529, 3.19918,
    0.576437, 0.0473147, 2.9761,
    0.594557, 0.0484765, 2.78161,
    0.612677, 0.0496384, 2.61336,
    0.557287, 0.0596527, 3.16966,
    0.57545, 0.0612516, 2.95182,
    0.593613, 0.0628505, 2.76211,
    0.611775, 0.0644493, 2.59814,
    0.556259, 0.0731525, 3.12918,
    0.574463, 0.0751885, 2.91886,
    0.592668, 0.0772244, 2.73602,
    0.610873, 0.0792603, 2.57718
    },
    // Element 9
    {
    0.61358, 0.0348274, 2.62319,
    0.640697, 0.0359145, 2.40675,
    0.667814, 0.0370016, 2.2231,
    0.694931, 0.0380888, 2.06762,
    0.612677, 0.0496384, 2.61336,
    0.639858, 0.0513811, 2.40045,
    0.667039, 0.0531238, 2.21899,
    0.694219, 0.0548665, 2.06501,
    0.611775, 0.0644493, 2.59814,
    0.639019, 0.0668477, 2.38954,
    0.666263, 0.069246, 2.21195,
    0.693507, 0.0716443, 2.06141,
    0.610873, 0.0792603, 2.57718,
    0.63818, 0.0823142, 2.37429,
    0.665487, 0.0853681, 2.20145,
    0.692794, 0.088422, 2.05428
    },
    // Element 10
    {
    0.694931, 0.0380888, 2.06762,
    0.735607, 0.0397195, 1.87034,
    0.776283, 0.0413502, 1.6954,
    0.816959, 0.0429809, 1.5345,
    0.694219, 0.0548665, 2.06501,
    0.73499, 0.0574806, 1.87039,
    0.775761, 0.0600947, 1.69755,
    0.816531, 0.0627088, 1.53845,
    0.693507, 0.0716443, 2.06141,
    0.734372, 0.0752417, 1.86899,
    0.775238, 0.0788392, 1.69809,
    0.816104, 0.0824367, 1.54069,
    0.692794, 0.088422, 2.05428,
    0.733755, 0.0930029, 1.86694,
    0.774716, 0.0975837, 1.70082,
    0.815677, 0.102165, 1.54918
    },
    // Element 11
    {
    0.816959, 0.0429809, 1.5345,
    0.877973, 0.0454269, 1.30341,
    0.938986, 0.0478729, 1.03303,
    1.0, 0.0503190, 0.71771,
    0.816531, 0.0627088, 1.53845,
    0.877688, 0.0666299, 1.31056,
    0.938844, 0.0705510, 1.04623,
    1.0, 0.0744721, 0.739839,
    0.816104, 0.0824367, 1.54069,
    0.877403, 0.0878328, 1.32174,
    0.938701, 0.093229, 1.06485,
    1.0, 0.0986252, 0.764405,
    0.815677, 0.102165, 1.54918,
    0.877118, 0.109036, 1.32943,
    0.938559, 0.115907, 1.08384,
    1.0, 0.122778, 0.808157
    },
    // Element 12
    {
    0.495576, 0.0663661, 4.13453,
    0.503667, 0.067271, 3.96545,
    0.511758, 0.0681758, 3.80868,
    0.519849, 0.0690807, 3.66372,
    0.49344, 0.0807303, 4.02472,
    0.501433, 0.0819398, 3.86707,
    0.509426, 0.0831492, 3.72080,
    0.51742, 0.0843587, 3.58537,
    0.490887, 0.0950265, 3.89399,
    0.498922, 0.0965632, 3.74991,
    0.506956, 0.0981, 3.61402,
    0.514991, 0.0996367, 3.48602,
    0.48792, 0.109242, 3.75022,
    0.496134, 0.111133, 3.61342,
    0.504348, 0.113024, 3.48628,
    0.512562, 0.114915, 3.36873
    },
    // Element 13
    {
    0.519849, 0.0690807, 3.66372,
    0.531986, 0.0704380, 3.46639,
    0.544122, 0.0717953, 3.28888,
    0.556259, 0.0731525, 3.12918,
    0.51742, 0.0843587, 3.58537,
    0.529618, 0.0862089, 3.39768,
    0.541816, 0.0880592, 3.22819,
    0.554014, 0.0899094, 3.07581,
    0.514991, 0.0996367, 3.48602,
    0.52725, 0.101980, 3.31057,
    0.539509, 0.104323, 3.15206,
    0.551769, 0.106666, 3.00964,
    0.512562, 0.114915, 3.36873,
    0.524882, 0.117751, 3.20778,
    0.537203, 0.120587, 3.06218,
    0.549524, 0.123423, 2.93026
    },
    // Element 14
    {
    0.556259, 0.0731525, 3.12918,
    0.574463, 0.0751885, 2.91886,
    0.592668, 0.0772244, 2.73602,
    0.610873, 0.0792603, 2.57718,
    0.554014, 0.0899094, 3.07581,
    0.572311, 0.0926848, 2.87607,
    0.590607, 0.0954601, 2.70075,
    0.608904, 0.0982355, 2.54805,
    0.551769, 0.106666, 3.00964,
    0.570158, 0.110181, 2.82089,
    0.588547, 0.113696, 2.65542,
    0.606936, 0.117211, 2.51141,
    0.549524, 0.123423, 2.93026,
    0.568005, 0.127677, 2.75487,
    0.586486, 0.131932, 2.60173,
    0.604967, 0.136186, 2.46758
    },
    // Element 15
    {
    0.610873, 0.0792603, 2.57718,
    0.63818, 0.0823142, 2.37429,
    0.665487, 0.0853681, 2.20145,
    0.692794, 0.088422, 2.05428,
    0.608904, 0.0982355, 2.54805,
    0.63635, 0.102399, 2.35388,
    0.663795, 0.106562, 2.18716,
    0.69124, 0.110725, 2.04462,
    0.606936, 0.117211, 2.51141,
    0.634519, 0.122483, 2.32702,
    0.662103, 0.127755, 2.16899,
    0.689686, 0.133027, 2.03411,
    0.604967, 0.136186, 2.46758,
    0.632689, 0.142567, 2.29418,
    0.660410, 0.148948, 2.14541,
    0.688132, 0.15533, 2.01747
    },
    // Element 16
    {
    0.692794, 0.088422, 2.05428,
    0.733755, 0.0930029, 1.86694,
    0.774716, 0.0975837, 1.70082,
    0.815677, 0.102165, 1.54918,
    0.69124, 0.110725, 2.04462,
    0.732408, 0.116969, 1.86464,
    0.773576, 0.123214, 1.70476,
    0.814744, 0.129458, 1.55927,
    0.689686, 0.133027, 2.03411,
    0.731061, 0.140935, 1.85953,
    0.772436, 0.148844, 1.70443,
    0.813812, 0.156752, 1.563,
    0.688132, 0.15533, 2.01747,
    0.729714, 0.164902, 1.85347,
    0.771297, 0.174474, 1.70888,
    0.812879, 0.184046, 1.58051
    },
    // Element 17
    {
    0.815677, 0.102165, 1.54918,
    0.877118, 0.109036, 1.32943,
    0.938559, 0.115907, 1.08384,
    1.0, 0.122778, 0.808157,
    0.814744, 0.129458, 1.55927,
    0.876496, 0.138825, 1.34824,
    0.938248, 0.148192, 1.1212,
    1.0, 0.157559, 0.874456,
    0.813812, 0.156752, 1.563,
    0.875874, 0.168614, 1.37571,
    0.937937, 0.180477, 1.16801,
    1.0, 0.192339, 0.936032,
    0.812879, 0.184046, 1.58051,
    0.875253, 0.198404, 1.393,
    0.937626, 0.212762, 1.21133,
    1.0, 0.22712, 1.0344
    },
    // Element 18
    {
    0.48792, 0.109242, 3.75022,
    0.496134, 0.111133, 3.61342,
    0.504348, 0.113024, 3.48628,
    0.512562, 0.114915, 3.36873,
    0.483817, 0.126179, 3.55637,
    0.491911, 0.128551, 3.43638,
    0.500005, 0.130922, 3.3253,
    0.508098, 0.133294, 3.22254,
    0.479126, 0.142962, 3.34226,
    0.487296, 0.145866, 3.24312,
    0.495465, 0.148769, 3.14749,
    0.503635, 0.151673, 3.05522,
    0.473853, 0.159572, 3.12238,
    0.482293, 0.163065, 3.03313,
    0.490732, 0.166559, 2.95010,
    0.499172, 0.170052, 2.87386
    },
    // Element 19
    {
    0.512562, 0.114915, 3.36873,
    0.524882, 0.117751, 3.20778,
    0.537203, 0.120587, 3.06218,
    0.549524, 0.123423, 2.93026,
    0.508098, 0.133294, 3.22254,
    0.520532, 0.136931, 3.07721,
    0.532965, 0.140569, 2.94543,
    0.545399, 0.144206, 2.82633,
    0.503635, 0.151673, 3.05522,
    0.516181, 0.156112, 2.92944,
    0.528728, 0.160551, 2.81474,
    0.541274, 0.16499, 2.71073,
    0.499172, 0.170052, 2.87386,
    0.511831, 0.175292, 2.7691,
    0.52449, 0.180533, 2.67302,
    0.537149, 0.185773, 2.58446
    },
    // Element 20
    {
    0.549524, 0.123423, 2.93026,
    0.568005, 0.127677, 2.75487,
    0.586486, 0.131932, 2.60173,
    0.604967, 0.136186, 2.46758,
    0.545399, 0.144206, 2.82633,
    0.564049, 0.149663, 2.66907,
    0.582699, 0.155119, 2.52966,
    0.601350, 0.160575, 2.40710,
    0.541274, 0.16499, 2.71073,
    0.560094, 0.171648, 2.57157,
    0.578913, 0.178307, 2.44813,
    0.597733, 0.184965, 2.33935,
    0.537149, 0.185773, 2.58446,
    0.556138, 0.193634, 2.46499,
    0.575127, 0.201494, 2.35988,
    0.594115, 0.209354, 2.26593
    },
    // Element 21
    {
    0.604967, 0.136186, 2.46758,
    0.632689, 0.142567, 2.29418,
    0.660410, 0.148948, 2.14541,
    0.688132, 0.15533, 2.01747,
    0.601350, 0.160575, 2.40710,
    0.629325, 0.16876, 2.24943,
    0.657301, 0.176944, 2.11249,
    0.685276, 0.185129, 1.99429,
    0.597733, 0.184965, 2.33935,
    0.625962, 0.194952, 2.19814,
    0.654191, 0.204940, 2.07577,
    0.68242, 0.214928, 1.97034,
    0.594115, 0.209354, 2.26593,
    0.622599, 0.221145, 2.14114,
    0.651082, 0.232936, 2.03273,
    0.679565, 0.244726, 1.93794
    },
    // Element 22
    {
    0.688132, 0.15533, 2.01747,
    0.729714, 0.164902, 1.85347,
    0.771297, 0.174474, 1.70888,
    0.812879, 0.184046, 1.58051,
    0.685276, 0.185129, 1.99429,
    0.727239, 0.197405, 1.84458,
    0.769203, 0.209682, 1.7127,
    0.811166, 0.221959, 1.59811,
    0.68242, 0.214928, 1.97034,
    0.724764, 0.229909, 1.83103,
    0.767108, 0.24489, 1.70839,
    0.809452, 0.259872, 1.60130,
    0.679565, 0.244726, 1.93794,
    0.722289, 0.262412, 1.81541,
    0.765014, 0.280098, 1.71051,
    0.807739, 0.297784, 1.62318
    },
    // Element 23
    {
    0.812879, 0.184046, 1.58051,
    0.875253, 0.198404, 1.393,
    0.937626, 0.212762, 1.21133,
    1.0, 0.22712, 1.0344,
    0.811166, 0.221959, 1.59811,
    0.87411, 0.240374, 1.42782,
    0.937055, 0.258789, 1.28516,
    1.0, 0.277204, 1.17080,
    0.809452, 0.259872, 1.60130,
    0.872968, 0.282344, 1.47538,
    0.936484, 0.304816, 1.36778,
    1.0, 0.327288, 1.27848,
    0.807739, 0.297784, 1.62318,
    0.871826, 0.324313, 1.50507,
    0.935913, 0.350843, 1.43826,
    1.0, 0.377372, 1.42403
    },
    // Element 24
    {
    0.473853, 0.159572, 3.12238,
    0.482293, 0.163065, 3.03313,
    0.490732, 0.166559, 2.95010,
    0.499172, 0.170052, 2.87386,
    0.466767, 0.179245, 2.83641,
    0.475062, 0.183477, 2.76971,
    0.483358, 0.187709, 2.70899,
    0.491653, 0.191941, 2.65347,
    0.458864, 0.198606, 2.54097,
    0.467287, 0.203680, 2.50400,
    0.475711, 0.208755, 2.46468,
    0.484135, 0.213829, 2.42274,
    0.450158, 0.217619, 2.25819,
    0.458977, 0.223652, 2.23568,
    0.467797, 0.229684, 2.21384,
    0.476616, 0.235717, 2.19341
    },
    // Element 25
    {
    0.499172, 0.170052, 2.87386,
    0.511831, 0.175292, 2.7691,
    0.52449, 0.180533, 2.67302,
    0.537149, 0.185773, 2.58446,
    0.491653, 0.191941, 2.65347,
    0.504502, 0.198451, 2.57022,
    0.517352, 0.204961, 2.49408,
    0.530201, 0.211471, 2.42471,
    0.484135, 0.213829, 2.42274,
    0.497174, 0.221609, 2.36652,
    0.510213, 0.229388, 2.3136,
    0.523253, 0.237168, 2.26397,
    0.476616, 0.235717, 2.19341,
    0.489846, 0.244767, 2.16469,
    0.503075, 0.253816, 2.13552,
    0.516304, 0.262866, 2.10432
    },
    // Element 26
    {
    0.537149, 0.185773, 2.58446,
    0.556138, 0.193634, 2.46499,
    0.575127, 0.201494, 2.35988,
    0.594115, 0.209354, 2.26593,
    0.530201, 0.211471, 2.42471,
    0.549475, 0.221236, 2.33056,
    0.568748, 0.231001, 2.24478,
    0.588022, 0.240766, 2.16789,
    0.523253, 0.237168, 2.26397,
    0.542811, 0.248838, 2.19372,
    0.56237, 0.260507, 2.12893,
    0.581929, 0.272177, 2.06982,
    0.516304, 0.262866, 2.10432,
    0.536148, 0.27644, 2.0576,
    0.555992, 0.290014, 2.01443,
    0.575836, 0.303588, 1.97102
    },
    // Element 27
    {
    0.594115, 0.209354, 2.26593,
    0.622599, 0.221145, 2.14114,
    0.651082, 0.232936, 2.03273,
    0.679565, 0.244726, 1.93794,
    0.588022, 0.240766, 2.16789,
    0.616933, 0.255413, 2.06556,
    0.645844, 0.270061, 1.97458,
    0.674754, 0.284708, 1.89518,
    0.581929, 0.272177, 2.06982,
    0.611268, 0.289681, 1.98749,
    0.640606, 0.307185, 1.91431,
    0.669944, 0.32469, 1.85039,
    0.575836, 0.303588, 1.97102,
    0.605602, 0.323949, 1.90909,
    0.635368, 0.34431, 1.85284,
    0.665134, 0.364671, 1.80052
    },
    // Element 28
    {
    0.679565, 0.244726, 1.93794,
    0.722289, 0.262412, 1.81541,
    0.765014, 0.280098, 1.71051,
    0.807739, 0.297784, 1.62318,
    0.674754, 0.284708, 1.89518,
    0.718121, 0.306679, 1.79241,
    0.761487, 0.328651, 1.70548,
    0.804853, 0.350622, 1.63947,
    0.669944, 0.32469, 1.85039,
    0.713952, 0.350946, 1.76339,
    0.757959, 0.377203, 1.69016,
    0.801966, 0.403459, 1.63512,
    0.665134, 0.364671, 1.80052,
    0.709783, 0.395213, 1.72781,
    0.754431, 0.425755, 1.6729,
    0.799080, 0.456296, 1.6338
    },
    // Element 29
    {
    0.807739, 0.297784, 1.62318,
    0.871826, 0.324313, 1.50507,
    0.935913, 0.350843, 1.43826,
    1.0, 0.377372, 1.42403,
    0.804853, 0.350622, 1.63947,
    0.869902, 0.383579, 1.54696,
    0.934951, 0.416535, 1.53304,
    1.0, 0.449492, 1.60267,
    0.801966, 0.403459, 1.63512,
    0.867978, 0.442844, 1.59378,
    0.933989, 0.482228, 1.61836,
    1.0, 0.521613, 1.71311,
    0.799080, 0.456296, 1.6338,
    0.866054, 0.502109, 1.62635,
    0.933027, 0.547921, 1.68218,
    1.0, 0.593734, 1.79959
    },
    // Element 30
    {
    0.450158, 0.217619, 2.25819,
    0.458977, 0.223652, 2.23568,
    0.467797, 0.229684, 2.21384,
    0.476616, 0.235717, 2.19341,
    0.438673, 0.239929, 1.90564,
    0.44733, 0.247072, 1.91259,
    0.455986, 0.254216, 1.91952,
    0.464643, 0.261359, 1.92652,
    0.426084, 0.261635, 1.56789,
    0.434946, 0.270090, 1.61516,
    0.443807, 0.278545, 1.65033,
    0.452669, 0.287, 1.67394,
    0.412421, 0.282682, 1.27508,
    0.421846, 0.292668, 1.34202,
    0.431271, 0.302655, 1.40003,
    0.440696, 0.312642, 1.44859
    },
    // Element 31
    {
    0.476616, 0.235717, 2.19341,
    0.489846, 0.244767, 2.16469,
    0.503075, 0.253816, 2.13552,
    0.516304, 0.262866, 2.10432,
    0.464643, 0.261359, 1.92652,
    0.478175, 0.272385, 1.92557,
    0.491707, 0.283412, 1.92065,
    0.505239, 0.294438, 1.91357,
    0.452669, 0.287, 1.67394,
    0.466504, 0.300004, 1.70520,
    0.480338, 0.313007, 1.7274,
    0.494173, 0.326010, 1.74219,
    0.440696, 0.312642, 1.44859,
    0.454833, 0.327622, 1.51159,
    0.46897, 0.342602, 1.55934,
    0.483107, 0.357583, 1.58771
    },
    // Element 32
    {
    0.516304, 0.262866, 2.10432,
    0.536148, 0.27644, 2.0576,
    0.555992, 0.290014, 2.01443,
    0.575836, 0.303588, 1.97102,
    0.505239, 0.294438, 1.91357,
    0.525537, 0.310977, 1.89597,
    0.545834, 0.327517, 1.87347,
    0.566132, 0.344056, 1.84893,
    0.494173, 0.326010, 1.74219,
    0.514925, 0.345515, 1.74714,
    0.535677, 0.365020, 1.74475,
    0.556429, 0.384525, 1.7375,
    0.483107, 0.357583, 1.58771,
    0.504313, 0.380053, 1.61365,
    0.525519, 0.402523, 1.62835,
    0.546725, 0.424993, 1.62852
    },
    // Element 33
    {
    0.575836, 0.303588, 1.97102,
    0.605602, 0.323949, 1.90909,
    0.635368, 0.34431, 1.85284,
    0.665134, 0.364671, 1.80052,
    0.566132, 0.344056, 1.84893,
    0.596579, 0.368866, 1.80914,
    0.627026, 0.393675, 1.76881,
    0.657473, 0.418484, 1.73031,
    0.556429, 0.384525, 1.7375,
    0.587556, 0.413782, 1.71155,
    0.618684, 0.443040, 1.68377,
    0.649812, 0.472297, 1.65719,
    0.546725, 0.424993, 1.62852,
    0.578534, 0.458699, 1.62062,
    0.610342, 0.492404, 1.60746,
    0.642151, 0.52611, 1.59124
    },
    // Element 34
    {
    0.665134, 0.364671, 1.80052,
    0.709783, 0.395213, 1.72781,
    0.754431, 0.425755, 1.6729,
    0.799080, 0.456296, 1.6338,
    0.657473, 0.418484, 1.73031,
    0.703143, 0.455698, 1.67729,
    0.748813, 0.492912, 1.64165,
    0.794484, 0.530126, 1.62503,
    0.649812, 0.472297, 1.65719,
    0.696504, 0.516183, 1.62486,
    0.743195, 0.560069, 1.60500,
    0.789887, 0.603955, 1.60196,
    0.642151, 0.52611, 1.59124,
    0.689864, 0.576668, 1.56351,
    0.737578, 0.627226, 1.549,
    0.785291, 0.677784, 1.5492
    },
    // Element 35
    {
    0.799080, 0.456296, 1.6338,
    0.866054, 0.502109, 1.62635,
    0.933027, 0.547921, 1.68218,
    1.0, 0.593734, 1.79959,
    0.794484, 0.530126, 1.62503,
    0.862989, 0.585946, 1.63842,
    0.931495, 0.641767, 1.71588,
    1.0, 0.697588, 1.85778,
    0.789887, 0.603955, 1.60196,
    0.859925, 0.669784, 1.62788,
    0.929962, 0.735613, 1.71366,
    1.0, 0.801442, 1.86199,
    0.785291, 0.677784, 1.5492,
    0.85686, 0.753621, 1.61759,
    0.92843, 0.829459, 1.69237,
    1.0, 0.905296, 1.7732
    },
    // Element 36
    {
    0.412421, 0.282682, 1.27508,
    0.421846, 0.292668, 1.34202,
    0.431271, 0.302655, 1.40003,
    0.440696, 0.312642, 1.44859,
    0.394658, 0.306994, 0.927447,
    0.403921, 0.318627, 1.03043,
    0.413184, 0.330261, 1.12253,
    0.422447, 0.341894, 1.20549,
    0.375464, 0.330192, 0.619918,
    0.385042, 0.343844, 0.774712,
    0.39462, 0.357495, 0.901422,
    0.404199, 0.371146, 1.00068,
    0.354908, 0.352194, 0.380050,
    0.365255, 0.368262, 0.572221,
    0.375603, 0.38433, 0.726988,
    0.38595, 0.400398, 0.837681
    },
    // Element 37
    {
    0.440696, 0.312642, 1.44859,
    0.454833, 0.327622, 1.51159,
    0.46897, 0.342602, 1.55934,
    0.483107, 0.357583, 1.58771,
    0.422447, 0.341894, 1.20549,
    0.437046, 0.359915, 1.29555,
    0.451644, 0.377936, 1.36268,
    0.466243, 0.395957, 1.41192,
    0.404199, 0.371146, 1.00068,
    0.419258, 0.392208, 1.11311,
    0.434318, 0.413269, 1.20088,
    0.449378, 0.434331, 1.26933,
    0.38595, 0.400398, 0.837681,
    0.401471, 0.4245, 0.972548,
    0.416992, 0.448603, 1.07635,
    0.432513, 0.472705, 1.14552
    },
    // Element 38
    {
    0.483107, 0.357583, 1.58771,
    0.504313, 0.380053, 1.61365,
    0.525519, 0.402523, 1.62835,
    0.546725, 0.424993, 1.62852,
    0.466243, 0.395957, 1.41192,
    0.48814, 0.422988, 1.46194,
    0.510038, 0.450019, 1.49004,
    0.531936, 0.477051, 1.50115,
    0.449378, 0.434331, 1.26933,
    0.471967, 0.465923, 1.3273,
    0.494557, 0.497516, 1.36377,
    0.517147, 0.529108, 1.38647,
    0.432513, 0.472705, 1.14552,
    0.455795, 0.508859, 1.21175,
    0.479076, 0.545012, 1.25324,
    0.502358, 0.581165, 1.27939
    },
    // Element 39
    {
    0.546725, 0.424993, 1.62852,
    0.578534, 0.458699, 1.62062,
    0.610342, 0.492404, 1.60746,
    0.642151, 0.52611, 1.59124,
    0.531936, 0.477051, 1.50115,
    0.564782, 0.517598, 1.50479,
    0.597629, 0.558145, 1.49975,
    0.630476, 0.598692, 1.48727,
    0.517147, 0.529108, 1.38647,
    0.551031, 0.576497, 1.39584,
    0.584916, 0.623885, 1.39641,
    0.6188, 0.671274, 1.39155,
    0.502358, 0.581165, 1.27939,
    0.53728, 0.635396, 1.29498,
    0.572202, 0.689626, 1.30147,
    0.607124, 0.743856, 1.30921
    },
    // Element 40
    {
    0.642151, 0.52611, 1.59124,
    0.689864, 0.576668, 1.56351,
    0.737578, 0.627226, 1.549,
    0.785291, 0.677784, 1.5492,
    0.630476, 0.598692, 1.48727,
    0.679746, 0.659512, 1.47295,
    0.729015, 0.720333, 1.47727,
    0.778285, 0.781153, 1.49278,
    0.6188, 0.671274, 1.39155,
    0.669627, 0.742357, 1.39451,
    0.720453, 0.81344, 1.41308,
    0.77128, 0.884522, 1.44321,
    0.607124, 0.743856, 1.30921,
    0.659508, 0.825201, 1.32813,
    0.711891, 0.906546, 1.34353,
    0.764275, 0.987892, 1.36666
    },
    // Element 41
    {
    0.785291, 0.677784, 1.5492,
    0.85686, 0.753621, 1.61759,
    0.92843, 0.829459, 1.69237,
    1.0, 0.905296, 1.7732,
    0.778285, 0.781153, 1.49278,
    0.85219, 0.872384, 1.55584,
    0.926095, 0.963615, 1.59334,
    1.0, 1.05485, 1.59822,
    0.77128, 0.884522, 1.44321,
    0.84752, 0.991147, 1.46347,
    0.92376, 1.09777, 1.47149,
    1.0, 1.20440, 1.46284,
    0.764275, 0.987892, 1.36666,
    0.84285, 1.10991, 1.37455,
    0.921425, 1.23193, 1.35064,
    1.0, 1.35395, 1.30216
    },
    // Element 42
    {
    0.354908, 0.352194, 0.380050,
    0.365255, 0.368262, 0.572221,
    0.375603, 0.38433, 0.726988,
    0.38595, 0.400398, 0.837681,
    0.328549, 0.376903, 0.174978,
    0.33879, 0.395392, 0.369793,
    0.349032, 0.413881, 0.52921,
    0.359273, 0.43237, 0.661179,
    0.300475, 0.399644, 0.0140753,
    0.311182, 0.42121, 0.223603,
    0.321889, 0.442776, 0.391855,
    0.332596, 0.464342, 0.531742,
    0.270831, 0.420298, -0.084665,
    0.282527, 0.445637, 0.129783,
    0.294223, 0.470975, 0.303842,
    0.305919, 0.496314, 0.443242
    },
    // Element 43
    {
    0.38595, 0.400398, 0.837681,
    0.401471, 0.4245, 0.972548,
    0.416992, 0.448603, 1.07635,
    0.432513, 0.472705, 1.14552,
    0.359273, 0.43237, 0.661179,
    0.375468, 0.461108, 0.818201,
    0.391664, 0.489845, 0.927037,
    0.407859, 0.518583, 0.997115,
    0.332596, 0.464342, 0.531742,
    0.349466, 0.497715, 0.687703,
    0.366335, 0.531087, 0.798884,
    0.383205, 0.56446, 0.879407,
    0.305919, 0.496314, 0.443242,
    0.323463, 0.534322, 0.588767,
    0.341007, 0.57233, 0.696579,
    0.358551, 0.610337, 0.776331
    },
    // Element 44
    {
    0.432513, 0.472705, 1.14552,
    0.455795, 0.508859, 1.21175,
    0.479076, 0.545012, 1.25324,
    0.502358, 0.581165, 1.27939,
    0.407859, 0.518583, 0.997115,
    0.432152, 0.561689, 1.0736,
    0.456445, 0.604795, 1.12447,
    0.480738, 0.647901, 1.15030,
    0.383205, 0.56446, 0.879407,
    0.408509, 0.614519, 0.954469,
    0.433814, 0.664578, 1.00836,
    0.459118, 0.714637, 1.04059,
    0.358551, 0.610337, 0.776331,
    0.384867, 0.667349, 0.856454,
    0.411182, 0.724361, 0.912856,
    0.437498, 0.781373, 0.953187
    },
    // Element 45
    {
    0.502358, 0.581165, 1.27939,
    0.53728, 0.635396, 1.29498,
    0.572202, 0.689626, 1.30147,
    0.607124, 0.743856, 1.30921,
    0.480738, 0.647901, 1.15030,
    0.517177, 0.712561, 1.1731,
    0.553617, 0.77722, 1.19331,
    0.590056, 0.841879, 1.20797,
    0.459118, 0.714637, 1.04059,
    0.497075, 0.789726, 1.07648,
    0.535031, 0.864814, 1.10822,
    0.572988, 0.939903, 1.13266,
    0.437498, 0.781373, 0.953187,
    0.476972, 0.86689, 1.00414,
    0.516446, 0.952408, 1.04336,
    0.55592, 1.03793, 1.07787
    },
    // Element 46
    {
    0.607124, 0.743856, 1.30921,
    0.659508, 0.825201, 1.32813,
    0.711891, 0.906546, 1.34353,
    0.764275, 0.987892, 1.36666,
    0.590056, 0.841879, 1.20797,
    0.644715, 0.938868, 1.23816,
    0.699375, 1.03586, 1.25949,
    0.754034, 1.13285, 1.26707,
    0.572988, 0.939903, 1.13266,
    0.629923, 1.05254, 1.16164,
    0.686858, 1.16517, 1.18285,
    0.743793, 1.2778, 1.19171,
    0.55592, 1.03793, 1.07787,
    0.61513, 1.1662, 1.10496,
    0.674341, 1.29448, 1.11881,
    0.733552, 1.42276, 1.12746
    },
    // Element 47
    {
    0.764275, 0.987892, 1.36666,
    0.84285, 1.10991, 1.37455,
    0.921425, 1.23193, 1.35064,
    1.0, 1.35395, 1.30216,
    0.754034, 1.13285, 1.26707,
    0.836022, 1.27833, 1.25989,
    0.918011, 1.42381, 1.21498,
    1.0, 1.5693, 1.12956,
    0.743793, 1.2778, 1.19171,
    0.829195, 1.44675, 1.16495,
    0.914598, 1.6157, 1.10870,
    1.0, 1.78465, 1.01985,
    0.733552, 1.42276, 1.12746,
    0.822368, 1.61517, 1.0995,
    0.911184, 1.80759, 1.03982,
    1.0, 2.0, 0.953141
    },
    // Element 48
    {
    0.270831, 0.420298, -0.084665,
    0.282527, 0.445637, 0.129783,
    0.294223, 0.470975, 0.303842,
    0.305919, 0.496314, 0.443242,
    0.233407, 0.442178, -0.167497,
    0.242504, 0.466096, -0.000259017,
    0.251601, 0.490014, 0.143973,
    0.260699, 0.513932, 0.257345,
    0.194228, 0.460734, -0.173073,
    0.201311, 0.48434, -0.0618973,
    0.208395, 0.507945, 0.0368917,
    0.215478, 0.531551, 0.121171,
    0.153589, 0.475826, -0.091294,
    0.159145, 0.500274, -0.062666,
    0.164702, 0.524722, -0.0285284,
    0.170258, 0.54917, 0.0315919
    },
    // Element 49
    {
    0.305919, 0.496314, 0.443242,
    0.323463, 0.534322, 0.588767,
    0.341007, 0.57233, 0.696579,
    0.358551, 0.610337, 0.776331,
    0.260699, 0.513932, 0.257345,
    0.275173, 0.551495, 0.381868,
    0.289647, 0.589058, 0.488089,
    0.304121, 0.62662, 0.570613,
    0.215478, 0.531551, 0.121171,
    0.226883, 0.568668, 0.221458,
    0.238287, 0.605786, 0.312020,
    0.249692, 0.642903, 0.393523,
    0.170258, 0.54917, 0.0315919,
    0.178593, 0.585842, 0.11131,
    0.186928, 0.622514, 0.171352,
    0.195262, 0.659185, 0.239195
    },
    // Element 50
    {
    0.358551, 0.610337, 0.776331,
    0.384867, 0.667349, 0.856454,
    0.411182, 0.724361, 0.912856,
    0.437498, 0.781373, 0.953187,
    0.304121, 0.62662, 0.570613,
    0.325833, 0.682964, 0.659795,
    0.347544, 0.739308, 0.728892,
    0.369255, 0.795651, 0.784747,
    0.249692, 0.642903, 0.393523,
    0.266798, 0.698579, 0.48356,
    0.283905, 0.754254, 0.559374,
    0.301012, 0.809930, 0.626685,
    0.195262, 0.659185, 0.239195,
    0.207764, 0.714193, 0.332805,
    0.220266, 0.769201, 0.411756,
    0.232768, 0.824209, 0.482365
    },
    // Element 51
    {
    0.437498, 0.781373, 0.953187,
    0.476972, 0.86689, 1.00414,
    0.516446, 0.952408, 1.04336,
    0.55592, 1.03793, 1.07787,
    0.369255, 0.795651, 0.784747,
    0.401822, 0.880167, 0.851853,
    0.434389, 0.964683, 0.905498,
    0.466956, 1.0492, 0.946926,
    0.301012, 0.809930, 0.626685,
    0.326672, 0.893444, 0.707058,
    0.352332, 0.976957, 0.774126,
    0.377992, 1.06047, 0.828316,
    0.232768, 0.824209, 0.482365,
    0.251522, 0.906720, 0.573657,
    0.270275, 0.989232, 0.653146,
    0.289028, 1.07174, 0.722599
    },
    // Element 52
    {
    0.55592, 1.03793, 1.07787,
    0.61513, 1.1662, 1.10496,
    0.674341, 1.29448, 1.11881,
    0.733552, 1.42276, 1.12746,
    0.466956, 1.0492, 0.946926,
    0.515806, 1.17597, 0.996289,
    0.564656, 1.30275, 1.03487,
    0.613507, 1.42952, 1.061,
    0.377992, 1.06047, 0.828316,
    0.416482, 1.18574, 0.895629,
    0.454972, 1.31101, 0.949995,
    0.493462, 1.43628, 0.988965,
    0.289028, 1.07174, 0.722599,
    0.317157, 1.19551, 0.805115,
    0.345287, 1.31928, 0.870105,
    0.373417, 1.44305, 0.918345
    },
    // Element 53
    {
    0.733552, 1.42276, 1.12746,
    0.822368, 1.61517, 1.0995,
    0.911184, 1.80759, 1.03982,
    1.0, 2.0, 0.953141,
    0.613507, 1.42952, 1.061,
    0.686782, 1.61968, 1.05961,
    0.760058, 1.80984, 1.02795,
    0.833333, 2.0, 0.967508,
    0.493462, 1.43628, 0.988965,
    0.551197, 1.62419, 1.0164,
    0.608932, 1.81209, 1.0155,
    0.666667, 2.0, 0.986301,
    0.373417, 1.44305, 0.918345,
    0.415611, 1.6287, 0.969802,
    0.457806, 1.81435, 1.00315,
    0.5, 2.0, 1.01673
    },
    // Element 54
    {
    0.153589, 0.475826, -0.091294,
    0.159145, 0.500274, -0.062666,
    0.164702, 0.524722, -0.0285284,
    0.170258, 0.54917, 0.0315919,
    0.103325, 0.489207, -0.0645424,
    0.106719, 0.511752, -0.0738711,
    0.110112, 0.534296, -0.0657375,
    0.113505, 0.55684, -0.0499383,
    0.0519437, 0.497295, -0.0290431,
    0.0535467, 0.5197, -0.0688757,
    0.0551497, 0.542105, -0.0865716,
    0.0567527, 0.56451, -0.0912922,
    0.0, 0.5, 0.0176326,
    0.0, 0.524060, -0.0527643,
    0.0, 0.54812, -0.0963504,
    0.0, 0.57218, -0.0919255
    },
    // Element 55
    {
    0.170258, 0.54917, 0.0315919,
    0.178593, 0.585842, 0.11131,
    0.186928, 0.622514, 0.171352,
    0.195262, 0.659185, 0.239195,
    0.113505, 0.55684, -0.0499383,
    0.119062, 0.593318, -0.00934656,
    0.124618, 0.629796, 0.0473732,
    0.130175, 0.666274, 0.103309,
    0.0567527, 0.56451, -0.0912922,
    0.0595309, 0.600794, -0.0708659,
    0.0623092, 0.637078, -0.0277456,
    0.0650874, 0.673363, 0.0230875,
    0.0, 0.57218, -0.0919255,
    0.0, 0.608271, -0.0730843,
    0.0, 0.644361, -0.0547087,
    0.0, 0.680451, -0.00212288
    },
    // Element 56
    {
    0.195262, 0.659185, 0.239195,
    0.207764, 0.714193, 0.332805,
    0.220266, 0.769201, 0.411756,
    0.232768, 0.824209, 0.482365,
    0.130175, 0.666274, 0.103309,
    0.13851, 0.720991, 0.187113,
    0.146844, 0.775708, 0.272308,
    0.155179, 0.830425, 0.350146,
    0.0650874, 0.673363, 0.0230875,
    0.0692548, 0.727789, 0.103205,
    0.0734221, 0.782215, 0.187764,
    0.0775895, 0.836641, 0.269974,
    0.0, 0.680451, -0.00212288,
    0.0, 0.734586, 0.0850579,
    0.0, 0.788722, 0.161729,
    0.0, 0.842857, 0.243545
    },
    // Element 57
    {
    0.232768, 0.824209, 0.482365,
    0.251522, 0.906720, 0.573657,
    0.270275, 0.989232, 0.653146,
    0.289028, 1.07174, 0.722599,
    0.155179, 0.830425, 0.350146,
    0.167681, 0.9125, 0.451894,
    0.180183, 0.994576, 0.542591,
    0.192685, 1.07665, 0.62331,
    0.0775895, 0.836641, 0.269974,
    0.0838405, 0.91828, 0.378081,
    0.0900915, 0.999919, 0.4751,
    0.0963426, 1.08156, 0.561227,
    0.0, 0.842857, 0.243545,
    0.0, 0.924060, 0.355616,
    0.0, 1.00526, 0.454078,
    0.0, 1.08647, 0.53855
    },
    // Element 58
    {
    0.289028, 1.07174, 0.722599,
    0.317157, 1.19551, 0.805115,
    0.345287, 1.31928, 0.870105,
    0.373417, 1.44305, 0.918345,
    0.192685, 1.07665, 0.62331,
    0.211438, 1.19976, 0.719935,
    0.230191, 1.32288, 0.798959,
    0.248944, 1.44599, 0.866449,
    0.0963426, 1.08156, 0.561227,
    0.105719, 1.20402, 0.667919,
    0.115096, 1.32648, 0.75682,
    0.124472, 1.44894, 0.830180,
    0.0, 1.08647, 0.53855,
    0.0, 1.20827, 0.649867,
    0.0, 1.33008, 0.745387,
    0.0, 1.45188, 0.815726
    },
    // Element 59
    {
    0.373417, 1.44305, 0.918345,
    0.415611, 1.6287, 0.969802,
    0.457806, 1.81435, 1.00315,
    0.5, 2.0, 1.01673,
    0.248944, 1.44599, 0.866449,
    0.277074, 1.63066, 0.936562,
    0.305204, 1.81533, 0.983049,
    0.333333, 2.0, 1.00927,
    0.124472, 1.44894, 0.830180,
    0.138537, 1.63262, 0.916157,
    0.152602, 1.81631, 0.97229,
    0.166667, 2.0, 0.999665,
    0.0, 1.45188, 0.815726,
    0.0, 1.63459, 0.908310,
    0.0, 1.81729, 0.970468,
    0.0, 2.0, 0.995377
    }
  } };
  m_numElems = element.size();

  static std::vector<float> vertices;
  vertices.reserve(16 * 6 * m_numElems);

  static std::vector<unsigned int> indices;
  indices.reserve(18 * 3 * m_numElems);

  // Find the bounding box
  for (size_t elemIdx = 0; elemIdx < m_numElems; ++elemIdx) {
    const auto& e = element[elemIdx];
    for (size_t i = 0; i < 48; i += 3) {
      const double x = e[i];
      const double y = e[i + 1];
      if (m_minX > x) { m_minX = x; }
      if (m_maxX < x) { m_maxX = x; }
      if (m_minY > y) { m_minY = y; }
      if (m_maxY < y) { m_maxY = y; }
    }
  }
  // Increase the bounding box by 10% on each side
  const double dx = (m_maxX - m_minX) / 20.0, dy = (m_maxY - m_minY) / 20.0;
  m_maxX += dx;  m_minX -= dx;  m_maxY += dy;  m_minY -= dy;

  // Gather vertices
  for (size_t elemIdx = 0; elemIdx < m_numElems; ++elemIdx) {
    const auto& e = element[elemIdx];
    for (size_t i = 0; i < 48; i += 3) {
      const float x = static_cast<float>(e[i]);
      const float y = static_cast<float>(e[i + 1]);

      const double s = e[i + 2];
      const double stressLevel = (s - minS) / (maxS - minS);
      const auto [r, g, b] = Rainbow::getColor(std::clamp(stressLevel, 0.0, 1.0));

      vertices.push_back(x);  vertices.push_back(y);  vertices.push_back(0.0f);    vertices.push_back(r); vertices.push_back(g); vertices.push_back(b);
    }

    // Generate indices
    const unsigned int n0 = static_cast<unsigned int>(elemIdx * 16);
    for (unsigned int row = 0; row < 3; ++row) {
      const unsigned int r4 = row * 4;
      for (unsigned int col = 0; col < 3; ++col) {
        const unsigned int i[4] = { r4 + col,  r4 + col + 1,  r4 + col + 5,  r4 + col + 4 };
        double x[4], y[4];
        for (unsigned int j = 0; j < 4; ++j) {
          x[j] = e[3 * i[j]];
          y[j] = e[3 * i[j] + 1];
        }
        // Pick shorter diagonal
        const double d02 = pow(x[2] - x[0], 2) + pow(y[2] - y[0], 2);
        const double d13 = pow(x[3] - x[1], 2) + pow(y[3] - y[1], 2);
        if (d02 < d13) {
          indices.push_back(n0 + i[0]);   indices.push_back(n0 + i[2]);   indices.push_back(n0 + i[3]);
          indices.push_back(n0 + i[0]);   indices.push_back(n0 + i[1]);   indices.push_back(n0 + i[2]);
        } else {
          indices.push_back(n0 + i[0]);   indices.push_back(n0 + i[1]);   indices.push_back(n0 + i[3]);
          indices.push_back(n0 + i[1]);   indices.push_back(n0 + i[2]);   indices.push_back(n0 + i[3]);
        }
      }
    }
  }

  // Transfer vertex data to VBO 0
  m_arrayBuf.bind();
  m_arrayBuf.allocate(vertices.data(), static_cast<int>(vertices.size() * sizeof(float)));

  // Transfer index data to VBO 1
  m_indexBuf.bind();
  m_indexBuf.allocate(indices.data(), static_cast<int>(indices.size() * sizeof(unsigned int)));
}

std::tuple<double, double, double, double> GeometryEngine::getMinMaxCoords() const {
  return std::make_tuple(m_minX, m_maxX, m_minY, m_maxY);
}


void GeometryEngine::drawModelGeometry(QOpenGLShaderProgram& program) {
  // Tell OpenGL which VBOs to use
  m_arrayBuf.bind();
  m_indexBuf.bind();

  // Tell OpenGL programmable pipeline how to locate vertex position data
  const int vertexLocation = program.attributeLocation("aPos");
  program.enableAttributeArray(vertexLocation);
  program.setAttributeBuffer(vertexLocation, GL_FLOAT, 0, 3, 6*sizeof(float));

  // Tell OpenGL programmable pipeline how to locate vertex color data
  const int colorLocation = program.attributeLocation("aColor");
  program.enableAttributeArray(colorLocation);
  program.setAttributeBuffer(colorLocation, GL_FLOAT, 3*sizeof(float), 3, 6*sizeof(float));

  //glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);

  // Draw model using indices from VBO 1
  glDrawElements(GL_TRIANGLES, static_cast<GLsizei>(3 * 18 * m_numElems), GL_UNSIGNED_INT, 0);
}
